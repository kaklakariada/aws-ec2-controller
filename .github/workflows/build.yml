name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - uses: actions/setup-java@v1
      with:
        java-version: 11

    - uses: actions/setup-node@v1
      with:
      node-version: '10.x'

    - name: Build backend
      run: cd backend && ./gradlew build

    - name: Configure infrastructure
      run: |
cat > infrastructure/infrastructure-config.ts << EOF
import { InfrastructureConfig } from "./lib/infrastructure-config-interface";\
export const CONFIG: InfrastructureConfig = {\
    region: "eu-west-1",\
    domain: "ec2-controller.example.com",\
    hostedZoneName: "example.com.",\
    hostedZoneId: "XXXXXXXXXXXXXX",\
    sslCertificateArn: "arn:aws:acm:us-east-1:000000000000:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",\
    stackName: "ec2-controller",\
    contactEmailAddress: "admin@example.com"\
};\
EOF

    - name: Build infrastructure
      run: cd infrastructure && npm install && npm run cdk synth

    - name: Configure frontend
      run: |
cat > frontend/src/frontend-config.ts << EOF
import { FrontendConfig } from "./environment";\
export const CONFIG: FrontendConfig = {\
    region: "eu-west-1",\
    apiGatewayEndpointUrl: "https://xxxxxxxxxx.execute-api.eu-west-1.amazonaws.com/prod",\
    cognitoIdentityPoolId: "eu-west-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",\
    cognitoUserPoolId: "eu-west-1_xxxxxxxxx",\
    cognitoUserPoolWebClientId: "xxxxxxxxxxxxxxxxxxxxxxxxxx"\
};\
EOF

    - name: Build frontend
      run: cd frontend && npm install && npm run build
